:DOC-CONFIG:
#+property: header-args :mkdirp yes :comments both
#+property: header-args:bash :results output
#+auto_tangle: nil
:END:

* Yadm dotfiles
** Get started

- Run it on GCP like:

  ~gcloud compute ssh ... --command "bash -s" < get-start.sh~

  or better yet:

  Use ~gcpvm~ from indigoviolet/gcloud:

  ~./gcpvm --dotenv-filename deeplearning-1-vm ssh "bash -s" < get-start.sh~

#+begin_src shell :tangle ~/.config/yadm/run-start.sh :shebang "#!/usr/bin/env bash"
GITHUB_PAT='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'
/bin/bash -c "$(curl -fsSL https://$GITHUB_PAT@raw.githubusercontent.com/indigoviolet/dotfiles/master/.config/yadm/start.sh)"
#+end_src


#+begin_src shell :tangle ~/.config/yadm/start.sh :shebang "#!/usr/bin/env bash" :noweb tangle
set -x
set -euo pipefail
<<start.sh>>
#+end_src

*** Get Brew

NONINTERACTIVE=1 only works if you have sudo access?

#+begin_src shell :noweb-ref start.sh
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
#+end_src

<2023-01-30 Mon>
https://github.com/Homebrew/homebrew-core/issues/116841#issuecomment-1409812549
brew has to be pinned to older version for now!

recipes that break: fzf, direnv, micro, coreutils, abduco...

*** Get yadm and just

#+begin_src shell :noweb-ref start.sh
brew install yadm just
#+end_src

*** Clone dotfiles

https://yadm.io/docs/getting_started

This will clone the repo files into $HOME (as a repo where the git directory
lives in ~.local/share/yadm/repo.git~)

#+begin_src shell :noweb-ref start.sh

# Note that this won't work on a single line: env var replacement happens before the command runs
# You can do
# $>    GITHUB_PAT=foo && (yadm clone ...)
GITHUB_PAT='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'
yadm clone "https://oauth2:$GITHUB_PAT@github.com/indigoviolet/dotfiles.git" --no-bootstrap

read -p 'Set yadm local.class (<personal|remote>): ' yadmclass
yadm config local.class $yadmclass && yadm alt && yadm bootstrap
#+end_src

**** Transcrypt

We are using Transcrypt to encrypt some keys before checking in. Note that these
files are "##c.personal", so they only need to be encrypted on the "personal"
machine. For remote servers, use ssh forwarding instead.

See https://github.com/elasticdog/transcrypt.

Install with ~brew install transcrypt~

#+begin_src shell
## on local machine (where transcrypt is already configured)
yadm transcrypt --display

## or
yadm transcrypt -c aes-256-cbc -p '<Get password from bitwarden>'

## to see encrypted files
yadm transcrypt --list

## Flush credentials (may need --force)
yadm transcrypt -f
#+end_src

***** .gitattributes

Configures which files are encrypted

#+begin_src shell :tangle ~/.gitattributes
.ssh/id_rsa.pub\#\#c.personal filter=crypt diff=crypt merge=crypt
.ssh/id_rsa\#\#c.personal filter=crypt diff=crypt merge=crypt
.ssh/id_ed25519.pub\#\#c.personal filter=crypt diff=crypt merge=crypt
.ssh/id_ed25519\#\#c.personal filter=crypt diff=crypt merge=crypt
.config/TabNine/registration_key filter=crypt diff=crypt merge=crypt
.config/rclone/rclone.conf filter=crypt diff=crypt merge=crypt
#+end_src

*** Mutagen sync for dotfiles

It is convenient to use mutagen to sync dotfiles over instead of using ~yadm push~
and then ~yadm pull~.

But mutagen takes a static config and yadm's files are scattered all over. To work around this:

1. We use ~~/.config/yadm/mutagen.yml~ to describe a config where everything is ignored.
2. Exclusions are specified via a templated include file ~yadm_ls_files_for_mutagen.yml~
3. ~yadm_ls_files_for_mutagen.yml~ is written and templated in by ~just
   yadm_ls_files_for_mutagen~
4. A pre-commit config ensures that we run ~just yadm_ls_files_for_mutagen~ after commit

It may require a ~mutagen terminate~ and ~mutagen restart~ to pick up the new
config. You may also need a ~yadm alt~ on the remote machine to update any alt
files. (see ~just yadm_sync_restart~)

Note that this doesn't remove the need to clone the repo on the remote machine,
yadm still needs it.

- The remote machine's yadm repo will get changes due to the sync
- we cannot sync templated files (ie the outputs of the templating), and
  therefore we should not vc-track templated files
- ~yadm alt~ uses the repo to decide which files need templating; so we have to periodically update the repo like so:

  ~yadm fetch --all && yadm reset --hard origin/master~


** zsh secrets
Make ~~/.zsh_secrets~ if you need any secrets that aren't committed. It is sourced via ~secrets.zsh~

** Alt files

We use alt files to

1. change the file wholesale (eg. Brewfile)
2. template the file to have slightly different content (eg. zshrc)

Some files are only useful on a specific class, but we don't bother removing
these or hiding them. They are addressed at point of use - ie. if it is a
zshcustom file, we might use templates to include them correctly in zshrc.
* TODO Paperwm (move to yadm)

* TODO droidcam

* Material shell

https://github.com/material-shell/material-shell

looks good on paper, but has some unresolved issues

- seems to be larger than the screen on my display
- installing from source didn't work


* Issues:

- Homebrew segmentation fault
  https://github.com/Homebrew/homebrew-core/issues/116841#issuecomment-1409812549


* Mac

- Cmd+Shift+. to show hidden files
- VSCode: use Cmd+Shift+P to "Install 'code' command in PATH"
* Nemo file manager

https://sourcedigit.com/13826-set-nemo-default-file-manager-ubuntu/

#+begin_src emacs-lisp
xdg-mime default nemo.desktop inode/directory application/x-gnome-saved-search
#+end_src

Hide Nautilus: https://wiki.archlinux.org/title/Desktop_entries#Hide_desktop_entries

See =~/.local/share/applications/org.gnome.Nautilus.desktop=

* COMMENT Kubuntu


#+begin_src bash
sudo apt-get install kubuntu-desktop
#+end_src

display-manager: https://ubuntuhandbook.org/index.php/2020/07/change-default-display-manager-ubuntu-20-04/

** tiling windows

requires more investigation/configuration to replicate paperwm setup

- https://github.com/kwin-scripts/kwin-tiling
- https://github.com/esjeon/krohnkite (dead?)
- https://github.com/Bismuth-Forge/bismuth --> v3 not yet available in ppas?
* Audio (Pipewire instead of Pulseaudio)

Goal was to get better sound quality in the HSP/HFP mode (with microphone)

https://pipewire-debian.github.io/pipewire-debian/ (Note that Ubuntu uses systemd, /not/ init)
https://askubuntu.com/a/1339897

Updated for Jammy (22.04)

https://linuxconfig.org/how-to-install-pipewire-on-ubuntu-linux
https://gist.github.com/the-spyke/2de98b22ff4f978ebf0650c90e82027e

* Grub: remember last boot choice

https://www.tuxtips.info/linux/how-to-make-grub-remember-my-last-choice

* Hardware
:PROPERTIES:
:ID:       676a6c50-5792-440b-8ab7-5c9c8c0effbc
:END:


** Keyboard shortcuts

*** Use xev to identify keys being pressed

#+begin_src shell
xev | perl -nle '/keysym\s+.+?,\s+(\w+)/ and print $1'
#+end_src

*** Identify X listener programs


#+begin_src shell
xlsclients -la
#+end_src

*** Check for gnome shortcuts that aren't in the graphical interface, and edit them

https://askubuntu.com/questions/82007/how-do-i-disable-ctrlaltleft-right

#+begin_src shell
gsettings list-recursively | grep <key>
dconf-editor
#+end_src

** Raspberry pi

https://www.tomshardware.com/how-to/raspberry-pi-print-server

*** ssh

ssh pi@raspberry.local or ssh pi@192.168.1.253
passwd: raspberry

*** Static IP

192.168.1.253
added via orbilogin.net (Address Reservation)



*** CUPS

http://192.168.1.253:631 -- don't use, see hplip below

**** hplip-printer-app

https://snapcraft.io/install/hplip-printer-app/raspbian
http://192.168.1.253:8000/

** Kinesis Advantage :ATTACH:
:PROPERTIES:
:ID:       84969743-6640-4c9d-bc73-5fab6ddc939d
:END:

https://kinesis-ergo.com/wp-content/uploads/kb500-qsg.pdf



[[attachment:_20220425_140912screenshot.png]]




- ~=m~ to switch to mac mode
- ~Program+\~ to switch off clicks
- Remapping: ~Prgrm+F12~ to start. Hit source, then destination to copy from source to destination
  + *Swap* ctrl and capslock
  + Copy alt to left shift
  + Copy win to key below X


*** Multimedia keys :ATTACH:

https://superuser.com/a/403765 & https://superuser.com/a/557689

~=n~ to turn on all multimedia keys


[[attachment:_20220802_111046screenshot.png]]


=F3 to toggle state of just F3


*** TODO: try kmonad to make a declarative and perhaps better config

https://github.com/kmonad/kmonad#features

** Wake on usb

*** COMMENT /etc/rc.local

#+BEGIN_SRC shell :tangle "/sudo::/etc/rc.local"
# https://askubuntu.com/questions/848698/wake-up-from-suspend-using-wireless-usb-keyboard-or-mouse-for-any-linux-distro
KB=$(dmesg | grep 'Product: Kinesis Keyboard' | tail -1 | perl -lne '/usb\s(.*?):/; print $1' )
echo enabled > /sys/bus/usb/devices/${KB}/power/wakeup

MOUSE=$(dmesg | grep 'Product: 2.4G Mouse' | tail -1 | perl -lne '/usb\s(.*?):/; print $1' )
echo enabled > /sys/bus/usb/devices/${MOUSE}/power/wakeup
#+END_SRC

Doesn't work on wakeup, seemingly.

*** /etc/udev/rules.d/10-usb-wakeup.rules

https://askubuntu.com/a/874701

This seems to work ([[*Check using:][Check using:]])

#+begin_src shell :results output
lsusb | grep mouse
lsusb | grep Keyboard
lsusb | grep LG
#+end_src

#+RESULTS:
: Bus 001 Device 039: ID 1ea7:0064 SHARKOON Technologies GmbH 2.4GHz Wireless rechargeable vertical mouse [More&Better]
: Bus 001 Device 042: ID 05f3:0007 PI Engineering, Inc. Kinesis Advantage PRO MPC/USB Keyboard
: Bus 001 Device 037: ID 043e:9a39 LG Electronics USA, Inc. LG Monitor Controls


#+BEGIN_SRC shell :tangle "/sudo::/etc/udev/rules.d/10-usb-wakeup.rules"
ACTION=="add", SUBSYSTEM=="usb", ATTRS{idVendor}=="1ea7", ATTRS{idProduct}=="0064" ATTR{power/wakeup}="enabled"
ACTION=="add", SUBSYSTEM=="usb", ATTRS{idVendor}=="05f3", ATTRS{idProduct}=="0007" ATTR{power/wakeup}="enabled"
ACTION=="add", SUBSYSTEM=="usb", ATTRS{idVendor}=="043e", ATTRS{idProduct}=="9a39" ATTR{power/wakeup}="enabled"


# https://askubuntu.com/a/1213465/895483
# - enable wakeup on ALL USB hubs (0-99)
# e.g. ls /sys/bus/usb/devices/usb*
# - rumor is that this step may not be necessary
# on all computers
# (I couldn't figure out how to enable wake on
# only parent hub of the keyboard and mouse.)
# KERNEL=="usb[0-9]|usb[0-9][0-9]", SUBSYSTEM=="usb", DRIVER=="usb", ATTR{power/wakeup}="enabled"

# enable wakeup for all keyboards
# Keyboards are HID class 3 protocol 1 devices.
SUBSYSTEM=="usb", ATTRS{bInterfaceClass}=="03", ATTRS{bInterfaceProtocol}=="01", ATTR{../power/wakeup}="enabled"

# enable wakeup for all mice (button click, not movement)
# Mice are HID class 3 protocol 2 devices.
SUBSYSTEM=="usb", ATTRS{bInterfaceClass}=="03", ATTRS{bInterfaceProtocol}=="02", ATTR{../power/wakeup}="enabled"
#+END_SRC

*** Check using:

#+BEGIN_SRC shell :results output
grep enabled /sys/bus/usb/devices/*/power/wakeup
echo '--'
grep . /sys/bus/usb/devices/*/product
#+END_SRC

#+RESULTS:
#+begin_example
/sys/bus/usb/devices/1-1.2.1/power/wakeup:enabled
/sys/bus/usb/devices/1-1.2.4.2/power/wakeup:enabled
--
/sys/bus/usb/devices/1-1.2.1/product:2.4G Mouse
/sys/bus/usb/devices/1-1.2.4/product:Kinesis Keyboard Hub
/sys/bus/usb/devices/1-1.2/product:USB2.0 Hub
/sys/bus/usb/devices/1-1.3/product:LG Monitor Controls
/sys/bus/usb/devices/1-1/product:4-Port USB 2.0 Hub
/sys/bus/usb/devices/1-7/product:HD Camera
/sys/bus/usb/devices/2-2/product:AX88179
/sys/bus/usb/devices/usb1/product:xHCI Host Controller
/sys/bus/usb/devices/usb2/product:xHCI Host Controller
#+end_example





** Suspend/Hibernate


https://www.linuxuprising.com/2021/08/how-to-enable-hibernation-on-ubuntu.html
https://askubuntu.com/a/1056420

*** find info
#+begin_src bash
swapon --show
#+end_src

#+RESULTS:
: NAME      TYPE SIZE USED PRIO
: /swapfile file  32G   0B   -2


#+begin_src bash :dir "/sudo::/"
findmnt -no UUID -T /swapfile
#+end_src

#+RESULTS:
: 7066f91b-b0f1-44e5-9ba5-5d3d1dfbb4b6

#+begin_src bash :dir "/sudo::/"
filefrag -v /swapfile | awk '$1=="0:" {print substr($4, 1, length($4)-2)}'
#+end_src

#+RESULTS:
: 48513024

*** edit /etc/default/grub
#+begin_src bash :results output
grep GRUB_CMDLINE_LINUX_DEFAULT /etc/default/grub
#+end_src

#+RESULTS:
: GRUB_CMDLINE_LINUX_DEFAULT="quiet splash resume=UUID=7066f91b-b0f1-44e5-9ba5-5d3d1dfbb4b6 resume_offset=48513024 usbcore.autosuspend=-1"

*** create initramfs resume
#+begin_src :tangle "/sudo::/etc/initramfs-tools/conf.d/resume" :comments no
RESUME=UUID=7066f91b-b0f1-44e5-9ba5-5d3d1dfbb4b6 resume_offset=48513024
#+end_src

*** Gnome Extension permissions

https://github.com/arelange/gnome-shell-extension-hibernate-status

#+begin_src conf :tangle "/sudo::/etc/polkit-1/localauthority/10-vendor.d/com.ubuntu.desktop.pkla"
[Enable hibernate in upower]
Identity=unix-user:*
Action=org.freedesktop.upower.hibernate
ResultActive=yes

[Enable hibernate in logind]
Identity=unix-user:*
Action=org.freedesktop.login1.hibernate;org.freedesktop.login1.handle-hibernate-key;org.freedesktop.login1;org.freedesktop.login1.hibernate-multiple-sessions;org.freedesktop.login1.hibernate-ignore-inhibit
ResultActive=yes
#+end_src

*** always suspend-then-hibernate

| sleep.conf Key | Written to       | value                      |
|----------------+------------------+----------------------------|
| *Mode          | /sys/power/disk  | suspend                    |
| *State         | /sys/power/state | disk, freeze, standby, mem |

https://www.kernel.org/doc/html/latest/admin-guide/pm/sleep-states.html#basic-sysfs-interfaces-for-system-suspend-and-hibernation
https://man.archlinux.org/man/sleep.conf.d.5
**** sys/power/state

| /sys/power/state | meaning                     |
|------------------+-----------------------------|
| freeze           | suspend to idle             |
| standby          | standby (ACPI S1)           |
| disk             | suspend to disk = hibernate |
| mem              | see /sys/power/mem_sleep    |

***** sys/power/mem_sleep

- s2idle :: suspend to idle
- shallow :: standby
- deep :: suspend to ram

#+begin_src bash :results output
cat /sys/power/mem_sleep
#+end_src

#+RESULTS:
: s2idle [deep]


**** sys/power/disk

#+begin_src bash :results output
cat /sys/power/disk
#+end_src

#+RESULTS:
: [platform] shutdown reboot suspend test_resume

- platform :: lower power state ACPI S4
- suspend :: hybrid, put system into state from mem_sleep file; if system is
  woken up successfully, discard the hibernation image. else use the image to
  restore


**** sleep.conf

#+begin_src conf :tangle "/sudo::/etc/systemd/sleep.conf"
#  This file is part of systemd.
#
#  systemd is free software; you can redistribute it and/or modify it
#  under the terms of the GNU Lesser General Public License as published by
#  the Free Software Foundation; either version 2.1 of the License, or
#  (at your option) any later version.
#
# Entries in this file show the compile time defaults.
# You can change settings by editing this file.
# Defaults can be restored by simply deleting this file.
#
# See systemd-sleep.conf(5) for details

[Sleep]
# https://wiki.archlinux.org/title/Power_management#Suspend_and_hibernate
SuspendMode=suspend
SuspendState=mem               #disk = hybrid-sleep, mem=ram
HibernateMode=suspend
HibernateState=disk

#AllowSuspend=yes
#AllowHibernation=yes
AllowSuspendThenHibernate=yes
AllowHybridSleep=yes
#SuspendMode=
#SuspendState=mem standby freeze
#HibernateMode=platform shutdown
#HibernateState=disk
HybridSleepMode=suspend platform shutdown
HybridSleepState=disk
HibernateDelaySec=60min
#+end_src

**** Make suspend-then-hibernate the standard

#+begin_src bash :results output :dir "/sudo::" :epilogue "echo \"\n\nexit_status: $?\"" :prologue "exec 2>&1"
ls -al /usr/lib/systemd/system/systemd-suspend.service
ls -al /etc/systemd/system/systemd-suspend.service
systemctl status systemd-suspend.service
#+end_src

#+RESULTS:
: -rw-r--r-- 1 root root 545 Jan  9 20:26 /usr/lib/systemd/system/systemd-suspend.service
: lrwxrwxrwx 1 root root 47 Mar 29 14:41 /etc/systemd/system/systemd-suspend.service -> /usr/lib/systemd/system/systemd-suspend.service
: ● systemd-suspend.service - Suspend
:      Loaded: loaded (/lib/systemd/system/systemd-suspend.service; linked; vendor preset: enabled)
:      Active: inactive (dead)
:        Docs: man:systemd-suspend.service(8)
:
:
: exit_status: 3



#+begin_src bash :results output :dir "/sudo::/" :epilogue "echo \"\n\nexit_status: $?\"" :prologue "exec 2>&1"
ln -sf /usr/lib/systemd/system/systemd-suspend-then-hibernate.service /etc/systemd/system/systemd-suspend.service
systemctl daemon-reload
systemctl status systemd-suspend.service
#+end_src

#+RESULTS:

(See below for restore)

#+RESULTS:

***** Restore suspend

#+begin_src bash :results output :dir "/sudo::/" :epilogue "echo \"\n\nexit_status: $?\"" :prologue "exec 2>&1"
ls -al /usr/lib/systemd/system/systemd-suspend.service
ls -al /etc/systemd/system/systemd-suspend.service
systemctl status systemd-suspend.service
#+end_src

#+RESULTS:
: -rw-r--r-- 1 root root 545 Jan  9 20:26 /usr/lib/systemd/system/systemd-suspend.service
: lrwxrwxrwx 1 root root 47 Mar 29 14:41 /etc/systemd/system/systemd-suspend.service -> /usr/lib/systemd/system/systemd-suspend.service

#+begin_src bash :results output :dir "/sudo::/" :epilogue "echo \"\n\nexit_status: $?\"" :prologue "exec 2>&1"
ln -sf /usr/lib/systemd/system/systemd-suspend.service /etc/systemd/system/systemd-suspend.service
systemctl daemon-reload
systemctl status systemd-suspend.service
#+end_src

#+RESULTS:
**** Debugging

- bluetooth issues: =[    9.200358] Bluetooth: hci0: Reading supported features failed (-16)=

https://01.org/blogs/rzhang/2015/best-practice-debug-linux-suspend/hibernate-issues

***** Looking in syslog:

- use ~just debug_suspend~ or ~just debug_hibernate~ to enter a start point with logging, look for the =Debug notice:= line

  other things to look for
- =Mar 29 15:03:15 venky-mxp kernel: [ 4452.342207] PM: suspend exit= : end of suspend
- =Mar 29 15:03:15 venky-mxp systemd-sleep[31022]: System resumed.= begin resume

- ❯ rg 'kernel:.*?PM:' /var/log/syslog | less
- =kernel... sysrq:= if you ended up using Alt-sysrq-REISUB


<2022-03-29 Tue>: Suspend works. Hibernate works, but only with intel gpu - with
nvidia it has failed at least twice.





** Power management (powertop)

- make sure tlp is installed and started
- sudo powertop --auto-tune

*** Less power usage

**** camera/bt

~powertop~ showed that the camera and bluetooth were using significant energy, so
we turn them off using something like:

#+begin_src emacs-lisp
echo 0 | sudo tee /sys/bus/usb/devices/1-7/power/autosuspend_delay_ms
echo auto | sudo tee /sys/bus/usb/devices/1-7/power/control
#+end_src

To automate this, first we set autosuspend_delay_ms in udev:

#+BEGIN_SRC shell :tangle "/sudo::/etc/udev/rules.d/10-usb-autosuspend.rules"
# HD camera (foxlink, SunplusIT)
ACTION=="add", SUBSYSTEM=="usb", ATTRS{idVendor}=="05c8", ATTRS{idProduct}=="03c0", ATTR{power/autosuspend_delay_ms}="0"
# bluetooth
ACTION=="add", SUBSYSTEM=="usb", ATTRS{idVendor}=="8087", ATTRS{idProduct}=="0a2b", ATTR{power/autosuspend_delay_ms}="0"
#+END_SRC

Then we add these devices to the USB autosuspend whitelist in TLP:

#+BEGIN_SRC shell :tangle "/sudo::/etc/tlp.d/10-usb-autosuspend.conf"
USB_BLACKLIST_PRINTER=0

# enable charging
USB_BLACKLIST_PHONE=1

USB_WHITELIST="05c8:03c0 8087:0a2b"

#+END_SRC

Check using:

#+begin_src bash :results output :dir "/sudo::/" :epilogue "echo "\n\nexit_status: $?"" :prologue "exec 2>&1"
tlp-stat -u
#+end_src

#+RESULTS:
#+begin_example
--- TLP 1.3.1 --------------------------------------------

+++ USB
Autosuspend         = enabled
Device whitelist    = 05c8:03c0 8087:0a2b
Device blacklist    = (not configured)
Bluetooth blacklist = disabled
Phone blacklist     = enabled
WWAN blacklist      = disabled

Bus 002 Device 001 ID 1d6b:0003 control = auto, autosuspend_delay_ms = -1000 -- Linux Foundation 3.0 root hub (hub)
Bus 001 Device 003 ID 05c8:03c0 control = auto, autosuspend_delay_ms =    0 -- Cheng Uei Precision Industry Co., Ltd (Foxlink) HD Camera (uvcvideo)
Bus 001 Device 002 ID 8087:0a2b control = auto, autosuspend_delay_ms =    0 -- Intel Corp. Bluetooth wireless interface (btusb)
Bus 001 Device 001 ID 1d6b:0002 control = auto, autosuspend_delay_ms = -1000 -- Linux Foundation 2.0 root hub (hub)


#+end_example

**** vm-writeback
#+BEGIN_SRC shell :tangle "/sudo::/etc/tlp.d/20-vm-writeback.conf"
# https://linrunner.de/tlp/faq/powertop.html#why-does-powertop-suggest-more-power-saving-settings-with-tlp-already-running
MAX_LOST_WORK_SECS_ON_BAT=15
#+END_SRC

**** bluetooth
#+BEGIN_SRC shell :tangle "/sudo::/etc/tlp.d/30-bt.conf"
DEVICES_TO_DISABLE_ON_BAT_NOT_IN_USE="bluetooth"
#+END_SRC

**** gpu

#+BEGIN_SRC shell :tangle "/sudo::/etc/tlp.d/40-gpu.conf"
# Set the min/max/turbo frequency for the Intel GPU.
# Possible values depend on your hardware. For available frequencies see
# the output of tlp-stat -g.
# Default: <none>

# INTEL_GPU_MIN_FREQ_ON_AC=0
# INTEL_GPU_MIN_FREQ_ON_BAT=0
# INTEL_GPU_MAX_FREQ_ON_AC=0
INTEL_GPU_MAX_FREQ_ON_BAT=500
# INTEL_GPU_BOOST_FREQ_ON_AC=0
#INTEL_GPU_BOOST_FREQ_ON_BAT=0

#+END_SRC


#+begin_src bash :results output :dir "/sudo::/" :epilogue "echo "\n\nexit_status: $?"" :prologue "exec 2>&1"
tlp-stat -g
#+end_src

#+RESULTS:
#+begin_example
--- TLP 1.3.1 --------------------------------------------

+++ Intel Graphics
/sys/module/i915/parameters/enable_dc        = -1 (use per-chip default)
/sys/module/i915/parameters/enable_fbc       =  1 (enabled)
/sys/module/i915/parameters/enable_psr       =  0 (disabled)
/sys/module/i915/parameters/modeset          = -1 (use per-chip default)

/sys/class/drm/card0/gt_min_freq_mhz         =   300 [MHz]
/sys/class/drm/card0/gt_max_freq_mhz         =  1150 [MHz]
/sys/class/drm/card0/gt_boost_freq_mhz       =  1150 [MHz]
/sys/kernel/debug/dri/0/i915_ring_freq_table: 300 350 400 450 500 550 600 650 700 750 800 850 900 950 1000 1050 1100 1150 [MHz]


#+end_example



* file/process limits


#+begin_src shell :tangle "/sudo::/etc/sysctl.d/20-inotify.conf"
# https://askubuntu.com/a/833979/895483
fs.inotify.max_user_watches=1048576
fs.inotify.max_user_instances=1048576
#+end_src


#+begin_src shell :tangle "/sudo::/etc/security/limits.d/10-open-files.conf"
 * soft nproc 65535
 * soft nofile 65535
#+end_src

#+RESULTS:
