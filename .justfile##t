HOME := env_var('HOME')

set shell := ["bash", "-uc"]

default:
    just --choose

{% if yadm.class == "personal" %}
EMACSDIR := env_var('EMACSDIR')

# Handle stale elc files
doom_rebuild:
    # https://github.com/millejoh/emacs-ipython-notebook/issues/824
    doom clean
    fd -g '*.elc' {{ EMACSDIR }} -uuu -x rm
    doom build

doom_tangle_config:
    emacs --batch -Q --eval "(require 'org)" --eval '(org-babel-tangle-file "'$DOOMDIR'/config.org")'

mutagen_project_start:
    mutagen project start -f ~/dev/ml-west.yml

mutagen_project_terminate:
    mutagen project terminate -f ~/dev/ml-west.yml
{% endif %}

{% if yadm.class == "gcp" %}
# Start devr jupyter notebook in a Tmux
jupyter_start:
    cd ~/dev/devr/py/nbs && tmux new-session -d -s jupyter jupyter notebook
{% endif %}


# Brew capture manually installed "leaves"
brew_dump_leaves:
    #!/usr/bin/env zsh
    set -euxo pipefail
    { brew leaves --installed-on-request; echo "^tap" } | rg --file - <(brew bundle dump --describe --file=-) --before-context 1 --no-line-number --no-context-separator --word-regexp --color=never

pipx_dump:
    pipx list --json

yadm_checkpoint:
    cd {{ HOME  }} && yadm add -u && yadm ci -m "checkpoint" && yadm push

# Install a Jupyter kernel from a Poetry venv
poetry_install_ipykernel:
    #!/usr/bin/env bash
    set -euxo pipefail
    cd {{ invocation_directory() }}
    if [[ ${POETRY_ACTIVE:-0} -ne 1 ]]; then
        echo "Poetry is not active"
        exit 1
    fi
    poetry add -D ipykernel
    poetry install
    python -m ipykernel install --user --name=$(basename $(pwd))

# https://github.com/python-poetry/poetry/issues/3958
# https://github.com/python-poetry/poetry/issues/2921#issuecomment-896812858
# Update git dependency
poetry_reinstall_git LIB:
    #!/usr/bin/env bash
    set -euxo pipefail
    cd {{ invocation_directory() }}
    if [[ ${POETRY_ACTIVE:-0} -ne 1 ]]; then
        echo "Poetry is not active"
        exit 1
    fi
    package_folder=`python -c 'import importlib; import sys; print("\n".join([importlib.import_module(m).__path__[0] for m in sys.argv[1:]]))' {{LIB}}`
    if test -d $package_folder; then
        rm $package_folder -rf
        poetry install
    fi

# Local Variables:
# mode: just
# eval: (firestarter-mode)
# firestarter: "yadm alt"
# End:
